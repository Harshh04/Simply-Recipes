{"version":3,"file":"component---src-pages-index-js-182d8a75f06a8c7548cb.js","mappings":"kOA8BA,MAzBiBA,IAAkB,IAAjB,QAAEC,GAASD,EAC3B,MAAME,GAAUC,EAAAA,EAAAA,GAAUF,GAC1B,OACEG,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,OAAKC,UAAU,aACZH,EAAQI,KAAI,CAACC,EAAKC,KACjB,MAAOC,EAAMC,GAASH,EAChBI,EAAUC,IAAQH,EAAM,CAAEI,OAAO,IACvC,OACET,EAAAA,cAACU,EAAAA,GAAI,CACHC,GAAE,SAAWJ,EACbK,IAAKR,EACLS,KAAK,SACLZ,UAAU,WAETI,EAAK,KAAGC,EAAM,IACV,KAIT,E,SCSV,MAXmBQ,KACjB,MACMjB,GADOkB,EAAAA,EAAAA,IApBJ,cAqBYC,4BAA4BC,MACjD,OACEjB,EAAAA,cAAA,WAASC,UAAU,0BACjBD,EAAAA,cAACkB,EAAQ,CAACrB,QAASA,IACnBG,EAAAA,cAACmB,EAAAA,EAAW,CAACtB,QAASA,IACd,C,2ECDd,IAzBoBD,IAAuB,IAAtB,QAAEC,EAAU,IAAID,EACnC,OACEI,EAAAA,cAAA,OAAKC,UAAU,gBACZJ,EAAQK,KAAKkB,IACZ,MAAM,GAAEC,EAAE,MAAEC,EAAK,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAaL,EAC3CM,GAAcC,EAAAA,EAAAA,GAASJ,GACvBK,EAAOpB,IAAQc,EAAO,CAAEb,OAAO,IACrC,OACET,EAAAA,cAACU,EAAAA,GAAI,CAACC,GAAE,IAAMiB,EAAQhB,IAAKS,EAAIpB,UAAU,UACvCD,EAAAA,cAAC6B,EAAAA,EAAW,CACVN,MAAOG,EACPI,IAAKR,EACLrB,UAAU,eAEZD,EAAAA,cAAA,UAAKsB,GACLtB,EAAAA,cAAA,SAAG,SACMwB,EAAS,YAAUC,GAEvB,IAGP,C,0HCpBK,SAASM,IACtB,OACE/B,EAAAA,cAACgC,EAAAA,EAAM,KACLhC,EAAAA,cAACiC,EAAAA,EAAG,CAACX,MAAM,YAAYY,YAAY,qBACnClC,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAMC,UAAU,QACdD,EAAAA,cAAA,UAAQC,UAAU,QAChBD,EAAAA,cAACmC,EAAAA,EAAW,CACVC,IAAI,6BACJN,IAAI,OACJ7B,UAAU,WACVoC,YAAY,UACZC,OAAO,YAAWC,YAAAC,EAAA,QAEpBxC,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,UAAI,6BAIVA,EAAAA,cAACc,EAAAA,EAAU,QAKrB,C,qBCZA,IApBmBjB,IACjB,MAAM4C,EAAU,CAAC,EACjB5C,EAAQ6C,SAAStB,IACfA,EAAOuB,QAAQC,KAAKF,SAASvC,IACvBsC,EAAQtC,GACVsC,EAAQtC,IAAQ,EAEhBsC,EAAQtC,GAAO,CACjB,GACA,IAQJ,OALgB0C,OAAOC,QAAQL,GAASM,MAAK,CAACC,EAAGC,KAC/C,MAAOC,GAAYF,GACZG,GAAaF,EACpB,OAAOC,EAASE,cAAcD,EAAU,GAE5B,C","sources":["webpack://gatsby-starter-hello-world/./src/components/TagsList.js","webpack://gatsby-starter-hello-world/./src/components/AllRecipes.js","webpack://gatsby-starter-hello-world/./src/components/RecipesList.js","webpack://gatsby-starter-hello-world/./src/pages/index.js","webpack://gatsby-starter-hello-world/./src/utils/setupTags.js"],"sourcesContent":["import React from \"react\";\r\nimport setupTags from \"../utils/setupTags\";\r\nimport { Link } from \"gatsby\";\r\nimport slugify from \"slugify\";\r\n\r\nconst TagsList = ({ recipes }) => {\r\n  const newTags = setupTags(recipes);\r\n  return (\r\n    <div className=\"tag-container\">\r\n      <h4>Recipes</h4>\r\n      <div className=\"tags-list\">\r\n        {newTags.map((tag, index) => {\r\n          const [text, value] = tag;\r\n          const tagSlug = slugify(text, { lower: true });\r\n          return (\r\n            <Link\r\n              to={`/tags/${tagSlug}`}\r\n              key={index}\r\n              type=\"button\"\r\n              className=\"tag-btn\"\r\n            >\r\n              {text} ({value})\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsList;\r\n","import React from \"react\";\r\nimport TagsList from \"./TagsList\";\r\nimport RecipesList from \"./RecipesList\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst query = graphql`\r\n  query {\r\n    allContentfulGatsbyTutorial(sort: { title: ASC }) {\r\n      nodes {\r\n        title\r\n        prepTime\r\n        cookTime\r\n        id\r\n        image {\r\n          gatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\r\n        }\r\n        content {\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst AllRecipes = () => {\r\n  const data = useStaticQuery(query);\r\n  const recipes = data.allContentfulGatsbyTutorial.nodes;\r\n  return (\r\n    <section className=\"recipes-container page\">\r\n      <TagsList recipes={recipes} />\r\n      <RecipesList recipes={recipes} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AllRecipes;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport slugify from \"slugify\";\r\n\r\nconst RecipesList = ({ recipes = [] }) => {\r\n  return (\r\n    <div className=\"recipes-list\">\r\n      {recipes.map((recipe) => {\r\n        const { id, title, image, prepTime, cookTime } = recipe;\r\n        const pathToImage = getImage(image);\r\n        const slug = slugify(title, { lower: true });\r\n        return (\r\n          <Link to={`/${slug}`} key={id} className=\"recipe\">\r\n            <GatsbyImage\r\n              image={pathToImage}\r\n              alt={title}\r\n              className=\"recipe-img\"\r\n            />\r\n            <h5>{title}</h5>\r\n            <p>\r\n              Prep: {prepTime} | Cook: {cookTime}\r\n            </p>\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipesList;\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport AllRecipes from \"../components/AllRecipes\";\r\nimport SEO from \"../components/SEO\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home Page\" description=\"This is homepage\" />\r\n      <div>\r\n        <main className=\"page\">\r\n          <header className=\"hero\">\r\n            <StaticImage\r\n              src=\"../assets/images/main.jpeg\"\r\n              alt=\"eggs\"\r\n              className=\"hero-img\"\r\n              placeholder=\"blurred\"\r\n              layout=\"fullWidth\"\r\n            />\r\n            <div className=\"hero-container\">\r\n              <div className=\"hero-text\">\r\n                <h1>simply recipes</h1>\r\n                <h4>no fluff, just recipes</h4>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <AllRecipes />\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","const setupTags = (recipes) => {\r\n  const allTags = {};\r\n  recipes.forEach((recipe) => {\r\n    recipe.content.tags.forEach((tag) => {\r\n      if (allTags[tag]) {\r\n        allTags[tag] += 1;\r\n      } else {\r\n        allTags[tag] = 1;\r\n      }\r\n    });\r\n  });\r\n\r\n  const newTags = Object.entries(allTags).sort((a, b) => {\r\n    const [firstTag] = a;\r\n    const [secondTag] = b;\r\n    return firstTag.localeCompare(secondTag);\r\n  });\r\n  return newTags;\r\n};\r\n\r\nexport default setupTags;\r\n"],"names":["_ref","recipes","newTags","setupTags","React","className","map","tag","index","text","value","tagSlug","slugify","lower","Link","to","key","type","AllRecipes","useStaticQuery","allContentfulGatsbyTutorial","nodes","TagsList","RecipesList","recipe","id","title","image","prepTime","cookTime","pathToImage","getImage","slug","GatsbyImage","alt","Home","Layout","SEO","description","StaticImage","src","placeholder","layout","__imageData","require","allTags","forEach","content","tags","Object","entries","sort","a","b","firstTag","secondTag","localeCompare"],"sourceRoot":""}